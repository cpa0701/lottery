<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ztesoft.nps.mapper.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="Department" >
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="region_id" property="regionId" />
    <result column="parent_id" property="parentId" />
    <result column="status" property="status" />
    <result column="type" property="type" />
    <result column="level" property="level" />
    <result column="created_by" property="createdBy" />
    <result column="created_at" property="createdAt" />
    <result column="modified_by" property="modifiedBy" />
    <result column="modified_at" property="modifiedAt" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, name, region_id, parent_id, status, type, level, created_by, created_at, modified_by, modified_at
  </sql>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="Long" >
    select 
    <include refid="Base_Column_List" />
    from departments
    where id = #{id}
  </select>
  
  <select id="findByCondition" resultMap="BaseResultMap" parameterType="DepartmentQuery">
    select 
    <include refid="Base_Column_List" />
    from departments
    <where>
    	<if test="name != null and name != ''">
    		and name like concat('%', #{name}, '%')
    	</if>
    	<if test="regionId != null">
    		and region_id = #{regionId} 
    	</if>
    	<if test="parentId != null">
    		and parent_id = #{parentId} 
    	</if>
    	<if test="status != null">
    		and status = #{status} 
    	</if>
    	<if test="type != null">
    		and type = #{type} 
    	</if>
    	<if test="level != null">
    		and level = #{level} 
    	</if>
    </where>
  </select>
  
  <select id="findByParentId" resultMap="BaseResultMap" parameterType="Long" >
    select 
    <include refid="Base_Column_List" />
    from departments
    where status = 1 and parent_id = #{id}
  </select>
  
  <select id="findByRegionId" resultMap="BaseResultMap" parameterType="Long" >
    select 
    <include refid="Base_Column_List" />
    from departments
    where status = 1 and region_id = #{id}
  </select>
  
  <insert id="add" parameterType="Department" useGeneratedKeys="true" keyProperty="id">
    insert into departments 
    <trim prefix="(" suffix=")" suffixOverrides=",">
    	<if test="name != null">
    		name,
    	</if>
    	<if test="regionId != null">
    		region_id,
    	</if>
    	<if test="parentId != null">
    		parent_id,
    	</if>
    	<if test="status != null">
    		status,
    	</if>
    	<if test="type != null">
    		type,
    	</if>
    	<if test="level != null">
    		level,
    	</if>
    	<if test="createdBy != null">
    		created_by,
    	</if>
    	<if test="modifiedBy != null">
    		modified_by,
    	</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    	<if test="name != null">
    		#{name},
    	</if>
    	<if test="regionId != null">
    		#{regionId},
    	</if>
    	<if test="parentId != null">
    		#{parentId},
    	</if>
    	<if test="status != null">
    		#{status},
    	</if>
    	<if test="type != null">
    		#{type},
    	</if>
    	<if test="level != null">
    		#{level},
    	</if>
    	<if test="createdBy != null">
    		#{createdBy},
    	</if>
    	<if test="modifiedBy != null">
    		#{modifiedBy},
    	</if>
    </trim>
  </insert>
  
  <update id="update" parameterType="Department" >
    update departments
    <set>
		<if test="name != null" >
			name = #{name},
		</if>
		<if test="regionId != null" >
			region_id = #{regionId},
		</if>
		<if test="parentId != null" >
			parent_id = #{parentId},
		</if>
		<if test="status != null" >
			status = #{status},
		</if>
		<if test="type != null" >
			type = #{type},
		</if>
		<if test="level != null" >
			level = #{level},
		</if>
		<if test="modifiedBy != null" >
			modified_by = #{modifiedBy},
		</if>
    </set>
    where id = #{id}
  </update>
  
  <update id="delete" parameterType="Department" >
    update departments set 
    	status = #{status},
    	modified_by = #{modifiedBy}
    where id = #{id}
  </update>

</mapper>