<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ztesoft.nps.qstMgr.mapper.QuestionBankMapper" >
  <resultMap id="BaseResultMap" type="com.ztesoft.nps.qstMgr.model.QuestionBank" >
    <id column="question_id" property="questionId" jdbcType="VARCHAR" />
    <result column="question_name" property="questionName" jdbcType="VARCHAR" />
    <result column="question_name2" property="questionName2" jdbcType="VARCHAR" />
    <result column="question_type" property="questionType" jdbcType="VARCHAR" />
    <result column="question_category" property="questionCategory" jdbcType="SMALLINT" />
    <result column="is_common" property="isCommon" jdbcType="TINYINT" />
    <result column="is_nps" property="isNps" jdbcType="TINYINT" />
    <result column="is_satisfied" property="isSatisfied" jdbcType="TINYINT" />
    <result column="option_layout" property="optionLayout" jdbcType="TINYINT" />
    <result column="content_check" property="contentCheck" jdbcType="TINYINT" />
    <result column="lenth_check" property="lenthCheck" jdbcType="BIGINT" />
    <result column="create_uid" property="createUid" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="question_tags" property="questionTags" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    question_id, question_name, question_name2, question_type, question_category, is_common, 
    is_nps, is_satisfied, option_layout, content_check, lenth_check, create_uid, create_time, 
    status, question_tags
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ztesoft.nps.qstMgr.model.QuestionBankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from question_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from question_bank
    where question_id = #{questionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from question_bank
    where question_id = #{questionId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ztesoft.nps.qstMgr.model.QuestionBankExample" >
    delete from question_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ztesoft.nps.qstMgr.model.QuestionBank" >
    insert into question_bank (question_id, question_name, question_name2, 
      question_type, question_category, is_common, 
      is_nps, is_satisfied, option_layout, 
      content_check, lenth_check, create_uid, 
      create_time, status, question_tags
      )
    values (#{questionId,jdbcType=VARCHAR}, #{questionName,jdbcType=VARCHAR}, #{questionName2,jdbcType=VARCHAR}, 
      #{questionType,jdbcType=VARCHAR}, #{questionCategory,jdbcType=SMALLINT}, #{isCommon,jdbcType=TINYINT}, 
      #{isNps,jdbcType=TINYINT}, #{isSatisfied,jdbcType=TINYINT}, #{optionLayout,jdbcType=TINYINT}, 
      #{contentCheck,jdbcType=TINYINT}, #{lenthCheck,jdbcType=BIGINT}, #{createUid,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{questionTags,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ztesoft.nps.qstMgr.model.QuestionBank" >
    insert into question_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="questionName != null" >
        question_name,
      </if>
      <if test="questionName2 != null" >
        question_name2,
      </if>
      <if test="questionType != null" >
        question_type,
      </if>
      <if test="questionCategory != null" >
        question_category,
      </if>
      <if test="isCommon != null" >
        is_common,
      </if>
      <if test="isNps != null" >
        is_nps,
      </if>
      <if test="isSatisfied != null" >
        is_satisfied,
      </if>
      <if test="optionLayout != null" >
        option_layout,
      </if>
      <if test="contentCheck != null" >
        content_check,
      </if>
      <if test="lenthCheck != null" >
        lenth_check,
      </if>
      <if test="createUid != null" >
        create_uid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="questionTags != null" >
        question_tags,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="questionName != null" >
        #{questionName,jdbcType=VARCHAR},
      </if>
      <if test="questionName2 != null" >
        #{questionName2,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null" >
        #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="questionCategory != null" >
        #{questionCategory,jdbcType=SMALLINT},
      </if>
      <if test="isCommon != null" >
        #{isCommon,jdbcType=TINYINT},
      </if>
      <if test="isNps != null" >
        #{isNps,jdbcType=TINYINT},
      </if>
      <if test="isSatisfied != null" >
        #{isSatisfied,jdbcType=TINYINT},
      </if>
      <if test="optionLayout != null" >
        #{optionLayout,jdbcType=TINYINT},
      </if>
      <if test="contentCheck != null" >
        #{contentCheck,jdbcType=TINYINT},
      </if>
      <if test="lenthCheck != null" >
        #{lenthCheck,jdbcType=BIGINT},
      </if>
      <if test="createUid != null" >
        #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="questionTags != null" >
        #{questionTags,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ztesoft.nps.qstMgr.model.QuestionBankExample" resultType="java.lang.Integer" >
    select count(*) from question_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question_bank
    <set >
      <if test="record.questionId != null" >
        question_id = #{record.questionId,jdbcType=VARCHAR},
      </if>
      <if test="record.questionName != null" >
        question_name = #{record.questionName,jdbcType=VARCHAR},
      </if>
      <if test="record.questionName2 != null" >
        question_name2 = #{record.questionName2,jdbcType=VARCHAR},
      </if>
      <if test="record.questionType != null" >
        question_type = #{record.questionType,jdbcType=VARCHAR},
      </if>
      <if test="record.questionCategory != null" >
        question_category = #{record.questionCategory,jdbcType=SMALLINT},
      </if>
      <if test="record.isCommon != null" >
        is_common = #{record.isCommon,jdbcType=TINYINT},
      </if>
      <if test="record.isNps != null" >
        is_nps = #{record.isNps,jdbcType=TINYINT},
      </if>
      <if test="record.isSatisfied != null" >
        is_satisfied = #{record.isSatisfied,jdbcType=TINYINT},
      </if>
      <if test="record.optionLayout != null" >
        option_layout = #{record.optionLayout,jdbcType=TINYINT},
      </if>
      <if test="record.contentCheck != null" >
        content_check = #{record.contentCheck,jdbcType=TINYINT},
      </if>
      <if test="record.lenthCheck != null" >
        lenth_check = #{record.lenthCheck,jdbcType=BIGINT},
      </if>
      <if test="record.createUid != null" >
        create_uid = #{record.createUid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.questionTags != null" >
        question_tags = #{record.questionTags,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question_bank
    set question_id = #{record.questionId,jdbcType=VARCHAR},
      question_name = #{record.questionName,jdbcType=VARCHAR},
      question_name2 = #{record.questionName2,jdbcType=VARCHAR},
      question_type = #{record.questionType,jdbcType=VARCHAR},
      question_category = #{record.questionCategory,jdbcType=SMALLINT},
      is_common = #{record.isCommon,jdbcType=TINYINT},
      is_nps = #{record.isNps,jdbcType=TINYINT},
      is_satisfied = #{record.isSatisfied,jdbcType=TINYINT},
      option_layout = #{record.optionLayout,jdbcType=TINYINT},
      content_check = #{record.contentCheck,jdbcType=TINYINT},
      lenth_check = #{record.lenthCheck,jdbcType=BIGINT},
      create_uid = #{record.createUid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      question_tags = #{record.questionTags,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ztesoft.nps.qstMgr.model.QuestionBank" >
    update question_bank
    <set >
      <if test="questionName != null" >
        question_name = #{questionName,jdbcType=VARCHAR},
      </if>
      <if test="questionName2 != null" >
        question_name2 = #{questionName2,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null" >
        question_type = #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="questionCategory != null" >
        question_category = #{questionCategory,jdbcType=SMALLINT},
      </if>
      <if test="isCommon != null" >
        is_common = #{isCommon,jdbcType=TINYINT},
      </if>
      <if test="isNps != null" >
        is_nps = #{isNps,jdbcType=TINYINT},
      </if>
      <if test="isSatisfied != null" >
        is_satisfied = #{isSatisfied,jdbcType=TINYINT},
      </if>
      <if test="optionLayout != null" >
        option_layout = #{optionLayout,jdbcType=TINYINT},
      </if>
      <if test="contentCheck != null" >
        content_check = #{contentCheck,jdbcType=TINYINT},
      </if>
      <if test="lenthCheck != null" >
        lenth_check = #{lenthCheck,jdbcType=BIGINT},
      </if>
      <if test="createUid != null" >
        create_uid = #{createUid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="questionTags != null" >
        question_tags = #{questionTags,jdbcType=VARCHAR},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ztesoft.nps.qstMgr.model.QuestionBank" >
    update question_bank
    set question_name = #{questionName,jdbcType=VARCHAR},
      question_name2 = #{questionName2,jdbcType=VARCHAR},
      question_type = #{questionType,jdbcType=VARCHAR},
      question_category = #{questionCategory,jdbcType=SMALLINT},
      is_common = #{isCommon,jdbcType=TINYINT},
      is_nps = #{isNps,jdbcType=TINYINT},
      is_satisfied = #{isSatisfied,jdbcType=TINYINT},
      option_layout = #{optionLayout,jdbcType=TINYINT},
      content_check = #{contentCheck,jdbcType=TINYINT},
      lenth_check = #{lenthCheck,jdbcType=BIGINT},
      create_uid = #{createUid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      question_tags = #{questionTags,jdbcType=VARCHAR}
    where question_id = #{questionId,jdbcType=VARCHAR}
  </update>
</mapper>